#-------------------------------------------------Creating database (anvio now V.4)-----------------------------------------------------------------------------#
#Reformating fasta file to make contig database
anvi-script-reformat-fasta -o /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5/fixed.contigs.fa -l 300 --simplify-names --report-file /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5/contigs.reformat.txt /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/MEGAHIT/C5_Results/final.contigs.fa

#Building database
anvi-gen-contigs-database -f /share/magalab/fixed.contigs.fa -o /share/magalab/fixed.contigsV4.db -n 'CDRF_Metagenome'
#Checking Stats
anvi-display-contigs-stats /share/magalab/fixed.contigsV4.db --report-as-text --output /share/magalab/contig_stats/

#----------------------------------------------Functional Annotation with Hmms-----------------------------------------------------------------------------#
#Running Resfam_Hmms for antibiotic resistance genes. 
#Will need to run ResFam_to_anvio.py to format files correctly for this to run on anvio
#this needed more mem than 50G
anvi-run-hmms -T 12 -c /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_V4/fixed.contigsV4.db --hmm-profile-dir /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/ResFam_Hmms/

#Running custom hmms Nitrogen fixation genes
anvi-run-hmms -T 12 -c /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_V4/fixed.contigsV4.db --hmm-profile-dir /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/Nif_Hmms/

##Running hmm from Foam collection
#Tried this and this ran for 30days without completion ... decided to subset out the nitrogen related genes and run that
#Will need to run Foam_to_anvio.py to get files formated properly
anvi-run-hmms -T 70 -c /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_V4/fixed.contigsV4.db --hmm-profile-dir /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/FOAM_2018/

##Running Nitrogen cycle hmm from subset of Foam collection
anvi-run-hmms -T 40 -c /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_V4/fixed.contigsV4.db --hmm-profile-dir /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/FOAM_2018/Foam_Nitro/

#Adding CAZy to database
#Will need to run CAZy_to_anvio.py to get files formated properly
anvi-run-hmms -T 14 -c /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_V4/fixed.contigsV4.db --hmm-profile-dir /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/CAZy_Hmms/

#-------------------------------------------Functional Annotation with NCBI Cogs-----------------------------------------------------------------------------#

#Adding Cogs to database 
#Setting up NCBI Cogs, you only need to run this part if you haven't run it before
anvi-setup-ncbi-cogs --num-threads 15 --reset --cog-data-dir /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/Cogs_2018
#Running Cogs
anvi-run-ncbi-cogs --sensitive --num-threads 15 -c /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_V4/fixed.contigsV4.db --cog-data-dir /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/Cog_2018/

#----------------------------------------------Functional Annotation with Prokka-----------------------------------------------------------------------------#
##This will probably have to go before the making contig database eventually.
#!/bin/bash
##
#SBATCH --mem=30G
#SBATCH --time=6-18:0:0
#SBATCH -n 10
#SBATCH -p production
#SBATCH -o /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/Prokka/Error_Out_Files/Standard_Prokka.out
#SBATCH -e /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/Prokka/Error_Out_Files/Standard_Prokka.err

aklog
source activate Prokka

cd /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_V5.1/
time prokka --cpus 10 --metagenome --outdir ../Prokka/Output/ --prefix Standard fixed.contigsV5_1000.fa 
echo "Done Prokka"

#----------------------------------------Functional Annotation with GhostKOALA-----------------------------------------------------------------------------#
#SBATCH --time=3-18:0:0
#SBATCH -n 3
#SBATCH -p production
#SBATCH -o /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/GhostKOALA/Error_Out_Files/Get_AA.out
#SBATCH -e /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/GhostKOALA/Error_Out_Files/Get_AA.err

aklog
source activate anvio5.2

#git clone https://github.com/edgraham/GhostKoalaParser.git
cd /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_V5.2/
time anvi-get-sequences-for-gene-calls --get-aa-sequences -c fixed.contigsV5_1000D.db -o ../GhostKOALA/protein-sequences.fa
echo "Done getting AA calls"
#adding genecall_ to the end of reach gene call so that the GhoastKOALA server isn't mad at us
cd /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/GhostKOALA/
sed -i 's/>/>genecall_/g' protein-sequences.fa
echo "Done Changing gene call names"
#GhoastKOALA server only takes files under 300MB so file needs to be split to reduce the size.
#Have to double check that a sequence isn't cut off into two files when you do this.
split -b 250M -d protein-sequences.fa

#As of right now there is some blank amino acid sequences. The following warning was produced when running Cogs.

#WARNING
#===============================================
#63 entries in the sequences table had blank sequences :/ This is related to the
#issue at https://github.com/merenlab/anvio/issues/565. If this is like mid-2018
#and you still get this warning, please find an anvi'o developer and make them
#feel embarrassed. If it is earlier than take this as a simple warning that some
#gene calls in your downstream analyses may have no sequences, and that's OK.
#This is a very minor issue due to on-the-fly addition of Ribosomal RNA gene
#calls to the contigs database, and will likely will not affect anything major.
#This warning will go away when anvi'o can seamlessly work with multiple gene
#callers (which we are looking forward to implement in the future).

#For right now Meren suggests to just remove the blank sequences, with the following script
#https://github.com/merenlab/anvio/issues/943
sed '/^>/ {N; /\n$/d}' protein-sequences2.fa > protein-sequences2_clean.fa

#After running GhoastKOALA you will need to concationate the files 
cat user_ko1.txt user_ko2.txt > user_ko_all.txt

#Now we will add the necesary header lines
echo -e "contig\taccession_id" > .temp && cat user_ko_all.txt >> .temp && mv .temp user_ko_all.txt

#Now we can import ghostKOALA annotations into Anvio database
time KEGG-to-anvio --KeggDB /share/magalab/bin/GhostKOALA_to_Anvi/GhostKoalaParser/KeggOrthology_Table1.txt -i user_ko_all.txt -o KeggAnnotations-AnviImportable.txt
#Once we have interproscan results as well we can use the one line to import both, so run only one of theselines!
time KEGG-to-anvio --KeggDB /share/magalab/bin/GhostKOALA_to_Anvi/GhostKoalaParser/KeggOrthology_Table1.txt -i user_ko_all.txt -o KeggAnnotations-AnviImportable.txt --interproscan interproscan-results.txt
#importing to anvio
time anvi-import-functions -c ../C5_V5.2/fixed.contigsV5_1000D.db -i KeggAnnotations-AnviImportable.txt

#-------------------------------------------------Taxanomic Annotation-----------------------------------------------------------------------------#
#Getting Gene calls from Anvio database 
anvi-get-dna-sequences-for-gene-calls -c /share/magalab/fixed.contigsV4.db -o /share/magalab/C5_V4gene-calls.fa

#Running Kaiju
#this part needs more than 40G memory and ran with 100G
/share/tearlab/Maga/Jill/bin/kaiju/bin/kaiju -v -z 10 -t /share/tearlab/Maga/Jill/bin/kaiju/kaijudb_nr/nodes.dmp -f /share/tearlab/Maga/Jill/bin/kaiju/kaijudb_nr/kaiju_db_nr_euk.fmi -i /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_V4/C5_V4gene-calls.fa -o anvioDB_kaiju_out

#Adding taxa names with kaiju
time /share/tearlab/Maga/Jill/bin/kaiju/bin/addTaxonNames -t /share/tearlab/Maga/Jill/bin/kaiju/kaijudb_nr/nodes.dmp -n /share/tearlab/Maga/Jill/bin/kaiju/kaijudb_nr/names.dmp -i /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_V4/anvioDB_kaiju_out -r superkingdom,phylum,order,class,family,genus,species -o anvioDB_kaiju-names_out

#-------------------------------------------Making sam/bam files to make anvi profiles-----------------------------------------------------------------------#
#Bash script
for f in /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Normalization/*.output.pe.kak.qc.fq.gz
do
	fname=$(basename $f .output.pe.kak.qc.fq.gz)
	echo $fname
	echo "#!/bin/bash" > $fname.C5.MB.Anvi.sh
	echo "##" >> $fname.C5.MB.Anvi.sh
	echo "#SBATCH --mem=10G" >> $fname.C5.MB.Anvi.sh
	echo "#SBATCH --time=2-18:0:0" >> $fname.C5.MB.Anvi.sh
	echo "#SBATCH -p gc,gc64,gc128,animal_sciences" >> $fname.C5.MB.Anvi.sh
	echo "#SBATCH -o /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Error_Out_Files/${fname}_sam_making_bam.out" >> $fname.C5.MB.Anvi.sh
	echo "#SBATCH -e /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Error_Out_Files/${fname}_sam_making_bam.err" >> $fname.C5.MB.Anvi.sh
	echo "module load bowtie2/2.2.8" >> $fname.C5.MB.Anvi.sh
	echo "module load samtools/1.8" >> $fname.C5.MB.Anvi.sh
	echo "module load khmer/2.0-rc1" >> $fname.C5.MB.Anvi.sh
	echo "#time split-paired-reads.py -f -o /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Normalization/Split/ -1 /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Normalization/Split/${fname}.output.1.pe.kak.qc.fq.gz -2 /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Normalization/Split/${fname}.output.2.pe.kak.qc.fq.gz /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Normalization/${fname}.output.pe.kak.qc.fq.gz" >> $fname.C5.MB.Anvi.sh
	echo "#echo "done split-paired-reads"" >> $fname.C5.MB.Anvi.sh
	echo "#echo "Note that running split-paired-reads.py will unzip file. Bowtie2 will error out if .gz is end of name without file being zipped."" >> $fname.C5.MB.Anvi.sh
	echo "#time mv /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Normalization/Split/${fname}.output.1.pe.kak.qc.fq.gz /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Normalization/Split/${fname}.output.1.pe.kak.qc.fastq" >> $fname.C5.MB.Anvi.sh
	echo "#time mv /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Normalization/Split/${fname}.output.2.pe.kak.qc.fq.gz /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Normalization/Split/${fname}.output.2.pe.kak.qc.fastq" >> $fname.C5.MB.Anvi.sh
	echo "#echo "Done renaming file"" >> $fname.C5.MB.Anvi.sh
	echo "#time bowtie2 --threads 8 -x /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_Mapping/fixed.contigs -1 /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Normalization/Split/${fname}.output.1.pe.kak.qc.fastq -2 /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Normalization/Split/${fname}.output.2.pe.kak.qc.fastq -U /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Normalization/${fname}.output.se.kak.qc.fq.gz -S /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_Mapping/${fname}.sam" >> $fname.C5.MB.Anvi.sh
	echo "#echo "done bowtie2 both"" >> $fname.C5.MB.Anvi.sh
	echo "time samtools view -F 4 -bS /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_Mapping/${fname}.sam > /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_Mapping/${fname}-RAW.bam" >> $fname.C5.MB.Anvi.sh
	echo "echo "done samtools view both"" >> $fname.C5.MB.Anvi.sh
	echo "time samtools sort -o /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_Mapping/${fname}.sorted.bam /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_Mapping/${fname}-RAW.bam" >> $fname.C5.MB.Anvi.sh
	echo "echo "done samtools sort both"" >> $fname.C5.MB.Anvi.sh 
	sbatch $fname.C5.MB.Anvi.sh
done
###For whatever reason Anvio didn't like how this was sorted so I resorted them via anvio. 
#-------------------------------------------Upgrading database to V.12 (anvio now V5.1) -----------------------------------------------------------------------#
cd /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_V4/
cp fixed.contigsV4.db fixed.contigsV5.db
anvi-migrate-db -t 12 fixed.contigsV5.db
#----------------------------------------------Adding Kaiju Taxonomy to Database -----------------------------------------------------------------------------#
time anvi-import-taxonomy-for-genes -i /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_V4/anvioDB_kaiju-names_out -c /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_V4/fixed.contigsV5.db -p kaiju --just-do-it
echo "Done adding Taxonomy to contig DB"
#-------------------------------------------Sorting Bam files with Anvio-----------------------------------------------------------------------#
for f in /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_Mapping/*-RAW.bam
do
	fname=$(basename $f -RAW.bam)
	echo $fname
	echo "#!/bin/bash" > $fname.AnviBam.sh
	echo "##" >> $fname.AnviBam.sh
	echo "#SBATCH -p production" >> $fname.AnviBam.sh
	echo "#SBATCH --mem=10G" >> $fname.AnviBam.sh
	echo "#SBATCH --time=2-18:0:0" >> $fname.AnviBam.sh
	echo "#SBATCH -o /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_Mapping/Error_Out_Files/${fname}_Bam.out" >> $fname.AnviBam.sh
	echo "#SBATCH -e /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_Mapping/Error_Out_Files/${fname}_Bam.err" >> $fname.AnviBam.sh
	echo "cd /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_Mapping/" >> $fname.AnviBam.sh
	echo "time "anvi-init-bam ${fname}-RAW.bam -o ${fname}.bam >> $fname.AnviBam.sh
sbatch $fname.AnviBam.sh
done
#-------------------------------------------Making Anvio Profiles for Each Sample-----------------------------------------------------------------------#
#NOTE: anivo doesn't like sample names to start with numbers so I renamed the samples
#rename 's/(\d+)-(\d+)_S(\d+)/Farm$1-S$2/' *.bam , rename 's/(\d+)-(\d+)_S(\d+)/Farm$1-S$2/' *.bam.bai
#These took 1-3 days to make
for f in /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_V4/Anvi_Bam/*.bam
do
	fname=$(basename $f .bam)
	echo $fname
	echo "#!/bin/bash" > $fname.anvi_profile.sh
	echo "##" >> $fname.anvi_profile.sh
	echo "#SBATCH --mem=100G" >> $fname.anvi_profile.sh
	echo "#SBATCH --time=9-18:0:0" >> $fname.anvi_profile.sh
	echo "#SBATCH -n 10" >> $fname.anvi_profile.sh
	echo "#SBATCH -p intel,assembly,production" >> $fname.anvi_profile.sh
	echo "#SBATCH -o /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_Mapping/Error_Out_Files/${fname}_anvi_profile2.out" >> $fname.anvi_profile.sh
	echo "#SBATCH -e /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_Mapping/Error_Out_Files/${fname}_anvi_profile2.err" >> $fname.anvi_profile.sh
	echo "echo "Note that I copied .bam files and .bai from /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_Mapping/"" >> $fname.anvi_profile.sh
	echo "cd /share/tearlab/Maga/Jill/CDRF_MetaGenome/Assembly_2018/Anvio/C5_V4/Anvi_Bam/" >> $fname.anvi_profile.sh
	echo "#time anvi-profile -T 10 -i ${fname}.bam -c ../fixed.contigsV5.db --list-contigs" >> $fname.anvi_profile.sh
	echo "#echo "Done listing contigs"" >> $fname.anvi_profile.sh
	echo "time anvi-profile -T 10 -i ${fname}.bam -c ../fixed.contigsV5.db -o ../Profiles/${fname}/ --sample-name ${fname}" >> $fname.anvi_profile.sh
	echo "echo "done profiles sort both"" >> $fname.anvi_profile.sh 
	sbatch $fname.anvi_profile.sh
done
